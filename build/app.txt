import React, { useState } from "react";

const initialItems = [
  { id: 1, description: "Passports", quantity: 2, packed: false },
  { id: 2, description: "Toiletries", quantity: 1, packed: false },
  { id: 3, description: "Charger", quantity: 4, packed: false },
];

export default function App() {
  const [items, setItems] = useState(initialItems);

  function handleAddItems(item) {
    setItems((items) => [...items, item]);
  }

  function handleDeleteItem(id) {
    setItems((items) => items.filter((item) => item.id !== id));
  }

  function handleToggleItem(id) {
    setItems((items) =>
      items.map((item) =>
        item.id === id ? { ...item, packed: !item.packed } : item
      )
    );
  }
  function handleClearList(){
    const cF=window.confirm('Are you sure you want to delete all items?');
  if(cF)  setItems([])
  }
  return (
    <div className="app">
      <Logo />
      <Form onAddItems={handleAddItems} />
      <PackingList
        items={items}
        onDeleteItem={handleDeleteItem}
        onToggleItem={handleToggleItem}
        onClearList={handleClearList}
      />
      <Stats items={items} />
    </div>
  );
}

function Logo() {
  return <h1>üèñÔ∏èFar AwayüèùÔ∏è</h1>;
}

function Form({ onAddItems }) {
  const [description, setDescription] = useState("");
  const [quantity, setQuantity] = useState(1);
  const [error, setError] = useState("");

  function handleSubmit(e) {
    e.preventDefault();

    const trimmedDescription = description.trim(); // Trim the input

    if (!trimmedDescription) {
      setError("Please enter a valid item description.");
      return;
    }
    if (!description) return;

    const newItem = { description, quantity, packed: false, id: Date.now() };
    onAddItems(newItem);
    setDescription("");
    setQuantity(1);
    setError("");
  }

  return (
    <form className="add-form" onSubmit={handleSubmit}>
      <h3>What do you need for your trip?</h3>
      <select
        onChange={(e) => setQuantity(Number(e.target.value))}
        name=""
        id=""
        value={quantity}
      >
        {Array.from({ length: 20 }, (_, i) => (
          <option value={i + 1} key={i}>
            {i + 1}
          </option>
        ))}
      </select>
      <input
        type="text"
        placeholder="Item..."
        value={description}
        onChange={(e) => setDescription(e.target.value)}
      />
      <button>Add</button>
      {error && (
        <p className="error-message" style={{ color: "blue" }}>
          {error}
        </p>
      )}
    </form>
  );
}

function PackingList({ items, onDeleteItem, onToggleItem,onClearList }) {
  const [sortBy, setSortby] = useState("input");
  let sortedItems;

  if (sortBy === "input") sortedItems = items;
  if (sortBy === "description")
    sortedItems = items
      .slice()
      .sort((a, b) => a.description.localeCompare(b.description));
  if (sortBy === "packed")
    sortedItems = items
      .slice()
      .sort((a, b) => Number(a.packed) - Number(b.packed));

  return (
    <div className="list">
      <ul>
        {sortedItems.map((item) => (
          <Item
            item={item}
            onDeleteItem={onDeleteItem}
            onToggleItem={onToggleItem}
            key={item.id}
          />
        ))}
      </ul>
      <div className="actions">
        <select
          name=""
          id=""
          value={sortBy}
          onChange={(e) => setSortby(e.target.value)}
        >
          <option value="input">Sort by Input Order</option>
          <option value="description">Sort by A-Z</option>
          <option value="packed">Sort by Packed Status</option>
        </select>
        <button onClick={onClearList}>clear list</button>
      </div>
    </div>
  );
}

function Item({ item, onDeleteItem, onToggleItem }) {
  const itemStyle = item.packed ? { textDecoration: "line-through" } : {};

  return (
    <li>
      <input
        type="checkbox"
        value={item.packed}
        onChange={() => onToggleItem(item.id)}
      />
      <span style={itemStyle} title={item.description}>
        {item.quantity} {item.description}
      </span>
      <button onClick={() => onDeleteItem(item.id)} title="delete item">
        ‚ùå
      </button>
    </li>
  );
}

function Stats({ items }) {
  const numItems = items.length;
  const numPacked = items.filter((item) => item.packed).length;
  const pT = Math.round((numPacked / numItems) * 100);

  return (
    <footer className="stats">
      <em>
        {pT === 100
          ? `You got everything! Ready to Go ‚úàÔ∏è`
          : `You have ${numItems} items on your list, and you already packed ${numPacked} (${pT}%)`}
      </em>
      <hr className="stats-hr" />
      <b className="stats-copy" style={{ color: "black" }}>
        {" "}
        &copy;Shrey
      </b>
    </footer>
  );
}
